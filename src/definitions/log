/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

typedef enum {
    UA_LOGCATEGORY_NETWORK = 0,
    UA_LOGCATEGORY_SECURECHANNEL,
    UA_LOGCATEGORY_SESSION,
    UA_LOGCATEGORY_SERVER,
    UA_LOGCATEGORY_CLIENT,
    UA_LOGCATEGORY_USERLAND,
    UA_LOGCATEGORY_SECURITYPOLICY
} UA_LogCategory;

typedef enum {
    UA_LOGLEVEL_TRACE = 0,
    UA_LOGLEVEL_DEBUG,
    UA_LOGLEVEL_INFO,
    UA_LOGLEVEL_WARNING,
    UA_LOGLEVEL_ERROR,
    UA_LOGLEVEL_FATAL
} UA_LogLevel;

typedef struct {
...;
} UA_Logger;

void UA_LOG_TRACE(const UA_Logger *logger, UA_LogCategory category, const char *msg, ...);
void UA_LOG_DEBUG(const UA_Logger *logger, UA_LogCategory category, const char *msg, ...);
void UA_LOG_INFO(const UA_Logger *logger, UA_LogCategory category, const char *msg, ...);
void UA_LOG_WARNING(const UA_Logger *logger, UA_LogCategory category, const char *msg, ...);
void UA_LOG_ERROR(const UA_Logger *logger, UA_LogCategory category, const char *msg, ...);
void UA_LOG_FATAL(const UA_Logger *logger, UA_LogCategory category, const char *msg, ...);

/*UA_Logger *UA_Log_Stdout;*/